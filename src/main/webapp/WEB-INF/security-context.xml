<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-4.1.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <http auto-config="true" use-expressions="true">
        <form-login login-page="/loginPage"
                    default-target-url="/userlist"
                    authentication-failure-url="/loginPage"
                    username-parameter="login"
                    password-parameter="password"/>
        <logout logout-success-url="/mainpage"/>
        <access-denied-handler error-page="/403" />
        <intercept-url pattern="/judge**" access="hasRole('ROLE_JUDGE')" />
        <intercept-url pattern="/tournaments**" access="hasAnyRole('ROLE_JUDGE', 'ROLE_USER')" />
        <intercept-url pattern="/tournaments/tourlist**" access="hasAnyRole('ROLE_JUDGE', 'ROLE_USER')" />
        <intercept-url pattern="/tournaments/create**" access="hasRole('ROLE_JUDGE')" />
        <intercept-url pattern="/tournaments/edit**" access="hasRole('ROLE_JUDGE')" />
        <csrf/>
    </http>

    <mvc:view-controller path="/403" view-name="403"/>

    <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value="org.postgresql.Driver"/>
        <beans:property name="url" value="jdbc:postgresql://localhost:5432/pierniczek"/>
        <beans:property name="username" value="postgres"/>
        <beans:property name="password" value="trzypik"/>
    </beans:bean>

    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" >
        <beans:constructor-arg name="strength" value="12" />
    </beans:bean>

    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query=
                                       "SELECT login, password, 'TRUE' FROM users WHERE login=?"
                               authorities-by-username-query=
                                       "SELECT login, role FROM users WHERE login=?  "/>
            <password-encoder ref="passwordEncoder" />
        </authentication-provider>
    </authentication-manager>

</beans:beans>